---
- name: Install single-node K3s on local EL9
  hosts: localhost
  connection: local
  gather_facts: true
  become: true

  vars:
    k3s_version: "v1.30.2+k3s1"         # Pin version or set "" to get latest
    k3s_extra_exec: "--write-kubeconfig-mode 644 --disable servicelb --disable traefik"
    k3s_bin: /usr/local/bin/k3s
    k3s_cfg_dir: /etc/rancher/k3s
    k3s_cfg_file: /etc/rancher/k3s/config.yaml

  tasks:
    - name: Ensure base packages are installed
      package:
        name:
          - curl
          - iptables
          - firewalld
        state: present

    - name: Enable and start firewalld
      service:
        name: firewalld
        state: started
        enabled: true

    # Use `command` (not shell) so we don't pass unsupported args like "warn"
    - name: Permanently open required ports
      command: firewall-cmd --permanent --add-port={{ item }}
      loop:
        - 6443/tcp          # kube-apiserver
        - 10250/tcp         # kubelet metrics
        - 2379-2380/tcp     # etcd (embedded)
        - 30000-32767/tcp   # NodePort range
        - 80/tcp            # optional: ingress HTTP
        - 443/tcp           # optional: ingress HTTPS
      register: firewalld_perm
      changed_when: "'ALREADY_ENABLED' not in firewalld_perm.stdout"

    - name: Open ports in running firewall
      command: firewall-cmd --add-port={{ item }}
      loop:
        - 6443/tcp
        - 10250/tcp
        - 2379-2380/tcp
        - 30000-32767/tcp
        - 80/tcp
        - 443/tcp
      register: firewalld_runtime
      changed_when: "'ALREADY_ENABLED' not in firewalld_runtime.stdout"

    - name: Reload firewalld
      command: firewall-cmd --reload
      when: firewalld_perm is changed

    - name: Create K3s config directory
      file:
        path: "{{ k3s_cfg_dir }}"
        state: directory
        mode: "0755"

    - name: Write minimal /etc/rancher/k3s/config.yaml
      copy:
        dest: "{{ k3s_cfg_file }}"
        mode: "0644"
        content: |
          kube-apiserver-arg:
            - "service-node-port-range=30000-32767"
          write-kubeconfig-mode: "0644"
          node-name: "{{ ansible_hostname }}"
      notify: Restart k3s

    - name: Download K3s install script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: "0755"

    - name: Install K3s server (single node)
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version | default('', true) }}"
      shell: |
        /tmp/k3s-install.sh {{ k3s_extra_exec }}
      args:
        creates: "{{ k3s_bin }}"

    - name: Ensure k3s service is enabled and running
      service:
        name: k3s
        state: started
        enabled: true

    - name: Wait for K3s node to become Ready
      shell: "{{ k3s_bin }} kubectl get nodes --no-headers"
      register: nodes_out
      changed_when: false
      retries: 20
      delay: 6
      until: nodes_out.stdout is search(' Ready ')

    - name: Show node status
      shell: "{{ k3s_bin }} kubectl get nodes -o wide"
      register: nodes_table
      changed_when: false

    - name: Display node info
      debug:
        msg: "{{ nodes_table.stdout_lines }}"

  handlers:
    - name: Restart k3s
      service:
        name: k3s
        state: restarted
